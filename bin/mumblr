#!/usr/bin/env ruby
require 'thor'
require 'mumblr'
require 'awesome_print'

db_path = File.expand_path('~/mumblr.db')
DataMapper::Model.raise_on_save_failure = true
Mumblr::Mumblr.load_database(db_path)

module Mumblr
  class MumblrCLI < Thor
    class_option :blog, desc: 'The "base hostname" or a superset thereof'# .  These are equivalent:
    #    lacecard
    #    http://lacecard.com (if it were a tumblr "custom URL" blog)
    #    http://lacecard.tumblr.com/post/123
    #    http://lacecard.tumblr.com
    # END_DESC
    class_option :type, type: :string
    class_option :count, type: :numeric
    class_option :data_store, type: :string, desc: "The path to which downloaded files are stored (default '~/mumblr-data')"
    class_option :download, type: :boolean, desc: "Download the files to DATA_STORE"

    desc "posts <options>", "Process blog's contents' URLs"
    def posts
      puts "Enumerating contents of #{options[:blog]}"
      blog = Blog.retrieve(options[:blog], tumblr_params)
      blog.posts.each do |p|
        p.post_contents.each do |pc|
          if options[:download]
            pc.download(content_store_base)
          else
            puts "#{p.url} #{pc.url}"
          end
        end
      end
    end

    desc "likes <options>", "Process blog's likes' contents' URLs"
    def likes
      puts "Enumerating contents of likes of #{options[:blog]}"
      blog = Blog.retrieve(options[:blog])

    end

    private

    def tumblr_params
      { type: options[:type] }
    end

    def content_store_base
      File.expand_path('~/mumblr-data')
    end

    def engine
      @engine ||= Mumblr::Engine.new(options[:blog])
    end
  end

end
Mumblr::MumblrCLI.start(ARGV)

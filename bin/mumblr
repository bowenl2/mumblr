#!/usr/bin/env ruby
require 'thor'
require 'mumblr'

db_path = File.expand_path('~/mumblr.db')
Mumblr::Mumblr.load_database(db_path)

module Mumblr
  class MumblrCLI < Thor
    class_option :blog, desc: 'The "base hostname" or a superset thereof'# .  These are equivalent:
    #    lacecard
    #    http://lacecard.com (if it were a tumblr "custom URL" blog)
    #    http://lacecard.tumblr.com/post/123
    #    http://lacecard.tumblr.com
    # END_DESC
    class_option :type, type: :string
    class_option :count, type: :numeric
    class_option :data_store, type: :string, desc: "The path to which downloaded files are stored"
    class_option :download, type: :boolean, desc: "Download the files to DATA_STORE"

    desc "posts <options>", "Process blog's contents' URLs"
    def posts
      blog = Blog.first_or_create(name: options[:blog]) do |b|
        puts "Creating blog: #{options[:blog]}"

      end
    end

    desc "likes <options>", "Process blog's likes' contents' URLs"
    def likes

    end

    private

    def blog(base_hostname)
      blog = Mumblr::Blog.retrieve(base_hostname)
      blog.posts_contents.each do |url| # urls
        puts url
      end
    end

    def tumblr_params
      { type: options[:type] }
    end

    def content_store_base
      File.expand_path('~/mumblr-data')
    end

    def download_blog_contents(options={})
      # TODO
      # was: engine.blog_content(tumblr_params).each { |url| puts url }
    end

    def download_blog_likes_contents(options={})
      # TODO
      # Was: engine.blog_likes_content(tumblr_params).each { |url| puts url }
    end

    def engine
      @engine ||= Mumblr::Engine.new(options[:blog])
    end
  end

end
Mumblr::MumblrCLI.start(ARGV)
